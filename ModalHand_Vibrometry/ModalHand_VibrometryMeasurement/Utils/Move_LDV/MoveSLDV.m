% %% SLDV Calibration script
% Written by Gregory Reardon (reardon@ucsb.edu)
% See README.m for instructions on how to use the GUI

%TODO: 
% Question:  HOW TO MAKE A GELATIN MASK, WHAT PIXEL LOCATIONS DENOTE THE
% EDGE OF THE GELATIN? Need approx diameter/radius in number of pixels and 
% an approximate center location....if the anchors actually circumscribe
% the circle by virtue of max/min value, should be able to back out diam
% and an approx pixel center, should be enough (like I did last time) to
% approximate a mask and then just toy with the diameter with a fudge
% factor to get it to look proper....
%% MAIN BODY
%--------------------------------------------------------------------------
addpath('Utils');
amp = 7; %max amp of SLDV, max = 0.82;

% Display Initialization
figSize = [20,20,1200,750];
fig_h = figure('Name','NI Data Acquisition','Position',figSize,...
    'Color',[0.98,0.98,0.98]);

ni = daq.createSession('ni');
ni.Rate = 10000;
ni.IsContinuous = 0;
AnalogOuts = ni.addAnalogOutputChannel('Dev3',0:1 ,'Voltage');

%set sldv amp limit for plot axes
%ylim([-amp amp]);
%xlim([-amp amp]);
%ylabel('LDV Y Voltage');
%xlabel('LDV X Voltage');

plt_h(2) = scatter([],[],'r'); %for grid anchors
plt_h(3) = scatter([],[], 2, 'b'); %for grid locations
plt_h(4) = scatter([],[], 2, 'w'); %for removed grid locations

hold off

%--------------------------------------------------------------------------
%% UI ELEMENTS
%--------------------------------------------------------------------------
%% X Voltage UI Elements
% slider for controlling x voltage
uicontrol('Style', 'slider',...
    'Position', [30 120 80 20],...
    'Callback', {@adjustVoltage, plt_h, ni},...
    'BackgroundColor',[1,1,1],...
    'Tag','slideX','SliderStep',[0.001,0.01],...
    'Max', amp, 'Min',-amp);

% label for x voltage slider
uicontrol('Style', 'text',...
    'Position', [30 140 100 15],...
    'BackgroundColor',[1,1,1],...
    'String','X Voltage');


%% Y Voltage UI Elements
% slider for controlling y voltage
uicontrol('Style', 'slider',...
    'Position', [65  20 20 80],...
    'Callback', {@adjustVoltage, plt_h, ni},...
    'BackgroundColor',[1,1,1],...
    'Tag','slideY','SliderStep',[0.001,0.01],...
    'Max', amp, 'Min',-amp);

% label for y voltage slider
uicontrol('Style', 'text',...
    'Position', [30 100 100 15],...
    'BackgroundColor',[1,1,1],...
    'String','Y Voltage');


%% Display voltage

%% Anchor UI Elements
% button for storing anchors
% uicontrol('Style', 'pushbutton',...
%     'Position', [200 70 80 30],...
%     'Callback', {@saveAnchor, vidInfo},...
%     'BackgroundColor',[0.9,0,0],...
%     'String','Save Anchor');

% popup menu for holding anchor positions
% c = uicontrol('Style','popupmenu',...
%     'Position', [200 90 100 40],...
%     'Callback', {@editAnchor, plt_h, u},...
%     'BackgroundColor', [1 1 1],...
%     'String', {'A1','A2','A3','A4'},...
%     'Tag','anchorMenu');

% label for anchors
% uicontrol('Style', 'text',...
%     'Position', [200 130 100 15],...
%     'BackgroundColor',[1,1,1],...
%     'String','Anchors');


%% GRID UI Elements
% Editable text for controlling grid resolution
% gridResObj = uicontrol('Style', 'edit',...
%     'Position', [320 80 100 20],...
%     'BackgroundColor',[1,1,1],...
%     'String','10');

% label for grid resolution
% uicontrol('Style', 'text',...
%     'Position', [320 100 80 40],...
%     'BackgroundColor',[1,1,1],...
%     'String','Grid Resolution (in pixels)');

% label for number of measurement locations
% uicontrol('Style', 'text',...
%     'Position', [450 110 80 40],...
%     'BackgroundColor',[1,1,1],...
%     'String','Number of Measurement Locations');

% text to display number of grid locations
% nLocations = uicontrol('Style', 'text',...
%     'Position', [450 80 50 20],...
%     'BackgroundColor',[1,1,1],...
%     'String','0');

% button for building a measurement grid
% grid = uicontrol('Style', 'pushbutton',...
%     'Position', [550 120 80 30],...
%     'Callback', {@makeGrid, plt_h, gridResObj, nLocations},...
%     'BackgroundColor',[0,0.8,0],...
%     'String','Build Grid');

% button for clearing the measurement grid
% uicontrol('Style', 'pushbutton',...
%     'Position', [550 80 80 30],...
%     'Callback', {@clearGrid, plt_h, grid, nLocations},...
%     'BackgroundColor',[0.8,0.8,0],...
%     'String','Clear Grid');


%% LASER CALIBRATION
% button for calibrating laser voltage
% grid = uicontrol('Style', 'pushbutton',...
%     'Position', [670 100 120 50],...
%     'Callback', {@laserVoltageCalibration, vidInfo, u},...
%     'BackgroundColor',[0,0.8,0],...
%     'String','Voltage Calibration');
% 
% 
% %% GRID SWEEP
% % Editable text for controlling grid sweep speed
% gridSweepObj = uicontrol('Style', 'edit',...
%     'Position', [825 110 100 20],...
%     'BackgroundColor',[1,1,1],...
%     'String','0.01');
% 
% % label for grid sweep speed
% uicontrol('Style', 'text',...
%     'Position', [825 130 100 20],...
%     'BackgroundColor',[1,1,1],...
%     'String','Grid Sweep Speed');
% 
% % button for sweeping ldv through grid locations
% sweepButton = uicontrol('Style', 'pushbutton',...
%     'Position', [825 60 100 40],...
%     'Callback', {@sweepGrid, plt_h, grid, u, gridSweepObj, vidInfo},...
%     'BackgroundColor',[0.2,0.2,0.9],...
%     'String','Grid Sweep',...
%     'Enable', 'off', 'Tag','sweepButton');


%% Save UI Elements
% button for saving grid locations (and anchors) to calibration file
% uicontrol('Style', 'pushbutton',...
%     'Position', [1000 100 100 50],...
%     'Callback', {@saveGrid, fig_h, grid, c},...
%     'BackgroundColor',[0,0.8,0.8],...
%     'String','SAVE!');


%% Adding/Removing Grid Locations
% button for removing a measurement location
% gridRemove = uicontrol('Style', 'pushbutton',...
%     'Position', [20 figSize(4)-480 50 40],...
%     'Callback', {@removeGridLocation, plt_h, grid, nLocations, camRes},...
%     'BackgroundColor',[0.6,0.2,1],...
%     'String','<html>Remove<br>Location');
% 
% % button for adding a measurement location
% gridAdd = uicontrol('Style', 'pushbutton',...
%     'Position', [80 figSize(4)-480 50 40],...
%     'Callback', {@addGridLocation, plt_h, grid, nLocations, camRes, vidInfo, u},...
%     'BackgroundColor',[0.6,0.2,1],...
%     'String','<html>Add<br>Location');



% button for sweeping ldv around drawn border
%uicontrol('Style', 'pushbutton',...
%    'Position', [30 figSize(4)-650 100 20],...
%    'Callback', {@sweepBorder, plt_h, u, c},...
%    'BackgroundColor',[0.2,0.2,0.9],...
%    'String','Border Sweep');





%--------------------------------------------------------------------------
%% MAIN LOOP 
%--------------------------------------------------------------------------
%gridEdges = ones(4,2); %data structure for plotting anchors
% Note: these points are always plotted, but they are initialized at
% [1,1] which is off of the plot because the limits are [-amp amp], which
% is defaulted at 0.8.
%setappdata(c.Parent,'isTakingSnapshot',false);
while ishandle(fig_h)
    
    pause(0.1) %UI pause
end


%--------------------------------------------------------------------------
function displayVoltage(hObject,event)

    

end

%% Adjust the laser position
function adjustVoltage(hObject,event, plt, ni)

    %grab the slider values
    hX = findobj('Tag','slideX');
    hY = findobj('Tag','slideY');
    x = hX.Value;
    y = hY.Value;
    
    %plot current laser location
    %set(plt(1), 'XData',x, 'YData',y);
    
    outputSingleScan(ni,[x,y]);
    fprintf('Voltage Location: %0.2f, %0.2f \n', x, y);
end

